<?php

/**
 * @file
 * Hooks provided by the Acquia Content Hub module.
 */
use Drupal\Core\Entity\ContentEntityInterface;
use Acquia\ContentHubClient\Entity as ContentHubEntity;
use Acquia\ContentHubClient\Attribute as Attribute;
use Drupal\Core\Entity\EntityInterface;

/**
 * Allows modules to modify the drupal entity before its normalization to CDF.
 *
 * Common Data Format (CDF): https://docs.acquia.com/content-hub/cdf.
 *
 * This is very useful to add additional ad-hoc fields into the drupal entity
 * before it is converted to CDF during the export process.
 * Note that the changes will be reflected in the entity published in Content
 * Hub, but the local Drupal entity will not be affected.
 *
 * @param string $entity_type_id
 *   The Drupal Entity type ID.
 * @param object $entity
 *   The Drupal entity.
 */
function mountain_george_general_acquia_contenthub_drupal_to_cdf_alter($entity_type_id, $entity) {

  // The following example modifies the title of the node for all nodes
  // exported to Content Hub and adds the string ' - By My Cool Site'.
  // It does it by changing the drupal entity title before it is converted
  // to Common Data Format (CDF).
  if ($entity_type_id === 'node') {
    // Site String.
    $site_string = ' - By My Cool Site - NODE';

    // Obtain the title from the node entity.
    $title = $entity->get('title')->getValue();

    // Always check that the changes have already been applied, because the
    // normalizer could be called more than once during the export process.
    if (strpos($title[0]['value'], $site_string) === FALSE) {

      // Add the site string to the title.
      $title[0]['value'] .= $site_string;
      $entity->get('title')->setValue($title);
    }
  }

}

function mountain_george_general_acquia_contenthub_cdf_from_drupal_alter(ContentHubEntity $contenthub_entity) {

  // The following example modifies the title of the node for all nodes
  // exported to Content Hub and adds the string ' - By My Cool Site'.
  // It does it by modifying the title after producing the CDF that is fetched
  // by Content Hub.
  if ($contenthub_entity->getType() == 'paragraph') {

    // Always check that the changes have already been applied, because the
    // normalizer could be called more than once during the export process.
    if (!$contenthub_entity->getAttribute('title')) {

      // Site String.
      $site_string = ' - PARAGRAPH - ';

      // Load the paragraph and find the parent node...
      $entity = \Drupal::entityTypeManager()->getStorage('paragraph')->loadByProperties(['uuid' => $contenthub_entity->getUuid]);
      $node = $entity->getParentEntity();

      // Create a new attribute...
      $title = new Attribute('string');

      // Set our custom title...
      $title->setValue($node->getTitle() . " " . $site_string . " " . $entity->bundle());

      // Apply the title to CDF...
      $contenthub_entity->setAttribute('title',$title);

      // Remember, in the code above you are just adding text to the CDF that
      // comes from an existent drupal entity without saving changes to the
      // entity itself, then in order for these changes to be obtained from
      // Content Hub, you would need to invalidate the cache tag for this
      // particular node so the changes take effect.
    }
  }
}